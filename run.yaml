---
- name: Ensure correct networking on PVE hosts
  hosts: pve_cluster
  gather_facts: true
  roles:
    - name: network
#TODO: add network interfaces

- name: Ensure PVE cluster is created
  hosts: pve_cluster_starting_node
  gather_facts: false
  tasks:

    - name: Check cluster status
      ansible.builtin.shell: pvecm status | grep -e "^Node ID"
      register: cluster_status
      ignore_errors: yes
      changed_when: false
      failed_when: false

    - name: Create cluster
      command: "pvecm create {{ pve_cluster_name }}"
      when: "cluster_status.rc==1"

- name: Ensure all PVE hosts are in the cluster
  hosts: pve_cluster
  gather_facts: true
  tasks:

    - name: Check cluster status
      shell: pvecm status | grep -e "^Node ID"
      register: cluster_status
      ignore_errors: yes
      changed_when: false
      failed_when: false

    - name: Ensure APT cache is updated
      ansible.builtin.apt:
        cache_valid_time: 1
        force_apt_get: true
        update_cache: true
      failed_when: false
      changed_when: false

    - name: Install pexpect
      ansible.builtin.apt:
        update_cache: false
        install_recommends: false
        force_apt_get: true
        package: python3-pexpect
        state: present

    - name: Add node to cluster
      expect:
        command: "pvecm add {{ hostvars[ groups['pve_cluster_starting_node'][0] ].inventory_hostname }}"
        responses:
          Please enter superuser \(root\) password for .*: "{{ pve_cluster_pass }}"
          Are you sure you want to continue connecting .*: "yes"
      register: ret
      failed_when: >
        ('abort!'                       in ret.stdout) or
        ('hostname verification failed' in ret.stdout) or
        ('not found on local node'      in ret.stdout) or
        ("Can't connect to"             in ret.stdout) or
        (ret.rc != 0)
      changed_when: >
        ("successfully added node" in ret.stdout)
      when: "cluster_status.rc==1"

    - name: Ensure the certificates are valid on each cluster node
      command:
        cmd: pvecm updatecerts

- name: Ensure proper configuration of PVE hosts
  hosts: pve_cluster
  gather_facts: true
  tasks:

    - name: Set up pve
      ansible.builtin.include_role:
        name: pve

    - name: Set up vim
      ansible.builtin.include_role:
        name: vim

    - name: Set up htop
      ansible.builtin.include_role:
        name: htop

    - name: Set up powertop
      ansible.builtin.include_role:
        name: powertop

    - name: Install tools
      ansible.builtin.apt:
        cache_valid_time: 3600
        install_recommends: false
        force_apt_get: true
        package:
          - hdparm
          - iperf3
          - minicom
          - ncdu
          - nmap
          - parted
          - screen
          - sed
          - sl
          - smartmontools
          - speedtest-cli
          - stress
          - sysstat
          - tmux
          - tree
          - unrar
          - unzip
          - wget
        state: present
